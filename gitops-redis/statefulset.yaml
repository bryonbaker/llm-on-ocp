apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-stack-server
  namespace: redis
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-stack-server
  serviceName: redis-stack-server
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis-stack-server
    spec:
      containers:
        - image: redis/redis-stack-server:7.2.0-v5
          imagePullPolicy: Always
          name: redis-stack-server
          ports:
            - containerPort: 6379
              name: db
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /data
              name: db
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: db
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        #storageClassName: standard
        volumeMode: Filesystem
